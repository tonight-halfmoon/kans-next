FROM elixir:1.16.2-alpine as build

ARG parameter_mix_env
ENV MIX_ENV=${parameter_mix_env?}

RUN \
  --mount=type=cache,target=/var/cache/apk/ \
  apk --no-cache --update-cache --force-missing-repositories upgrade && \
  apk add --no-cache git~=2.43 inotify-tools~=4.23

WORKDIR /app

RUN \
  --mount=type=bind,source=mix.lock,target=mix.lock \
  --mount=type=cache,target=/root/.mix \
  --mount=type=cache,target=/root/.hex \
  --mount=type=bind,source=mix.exs,target=mix.exs \
  --mount=type=bind,source=config/config.exs,target=config/config.exs \
  --mount=type=bind,source=config/${MIX_ENV}.exs,target=config/${MIX_ENV}.exs \
  --mount=type=bind,source=config/runtime.exs,target=config/runtime.exs \
  --mount=type=bind,source=VERSION,target=VERSION \
  --mount=type=bind,source=lib,target=lib \
  --mount=type=bind,source=assets,target=assets,rw \
  --mount=type=bind,source=priv,target=priv,rw \
  --mount=type=bind,source=rel,target=rel,rw \
  MIX_ENV=${MIX_ENV} mix "do" \
    local.hex --if-missing --force \
    + local.rebar --if-missing --force && \
  # mix archive.install github hexpm/hex branch latest && \
  mix deps.get --only ${MIX_ENV} && \
  MIX_ENV=${MIX_ENV} mix "do" \
    deps.compile \
    + compile \
    + assets.setup + assets.build \
    + phx.gen.release \
    + release

COPY assets assets

FROM build as release

WORKDIR /app
RUN chown 10000:10000 /app

COPY --from=build --chown=10000:10000 /app/_build/${MIX_ENV}/rel/kans ./

USER 10000:10000

ENV PHX_HOST="jpat.test"
ENV PHX_SERVER=true

COPY --chown=10000:10000 ./entrypoint.alpine.sh ./

CMD ["/app/entrypoint.alpine.sh"]
