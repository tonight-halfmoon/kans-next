apiVersion: apps/v1
kind: Deployment
metadata:
  name: kans
  labels:
    app.kubernetes.io/part-of: jpat
spec:
  replicas: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: kans
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kans
    spec:
      terminationGracePeriodSeconds: 1
      containers:
        - securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 10000
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          name: this
          image: kaap:0.1.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
              protocol: TCP
              name: actuator
            - containerPort: 4001
              protocol: TCP
              name: api
            - containerPort: 9100
              name: http-metrics
          resources:
            requests:
              memory: 32Mi
              cpu: 250m
            limits:
              memory: 64Mi
              cpu: 500m
          readinessProbe:
            initialDelaySeconds: 3
            periodSeconds: 2
            httpGet:
              path: /healthz
              port: actuator
              scheme: HTTPS
            timeoutSeconds: 1
            successThreshold: 1
          # livenessProbe:
          #   failureThreshold: 3
          #   httpGet:
          #     path: /healthz?full=true
          #     port: actuator
          #     scheme: HTTPS
          #   initialDelaySeconds: 3
          #   periodSeconds: 30
          #   successThreshold: 1
          #   timeoutSeconds: 5
          env:
            - name: DEFAULT_PORT
              valueFrom:
                configMapKeyRef:
                  key: DEFAULT_PORT
                  name: port-env-config
            - name: TLS_CRT
              value: /etc/tls/tls.crt
            - name: TLS_KEY
              value: /etc/tls/tls.key
            - name: CA_CRT
              value: /etc/ssl/certs/ca.crt
          volumeMounts:
            - name: tls
              mountPath: /etc/tls
              readOnly: true
            - name: ca-crt
              mountPath: /etc/ssl/certs
              readOnly: true
      volumes:
        - name: tls
          secret:
            secretName: tls-secret
        - name: ca-crt
          secret:
            secretName: ca-secret
